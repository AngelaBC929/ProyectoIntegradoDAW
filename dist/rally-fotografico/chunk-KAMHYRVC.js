import{Va as I,a as d,b as m,eb as c,h as b,j as p,k as i,l,n as s,p as a,s as y,v}from"./chunk-Q43MG4T7.js";var f=class u{constructor(e){this.http=e}apiUrl=`${c.apiUrl}/rallies.php`;apiInscripcionesUrl=`${c.apiUrl}/inscripciones.php`;apiUploadPhotosUrl=`${c.apiUrl}/fotos.php`;ralliesSubject=new b([]);rallies$=this.ralliesSubject.asObservable();userInscriptionsSubject=new b([]);userInscriptions$=this.userInscriptionsSubject.asObservable();getAllRallies(){return this.http.get(this.apiUrl).pipe(a(e=>this.ralliesSubject.next(e)),s(e=>(console.error("Error al obtener rallies:",e),i(()=>new Error(e)))))}createRally(e){return this.http.post(this.apiUrl,e,{observe:"response"}).pipe(a(r=>{let o=r.body,t=this.ralliesSubject.value||[];this.ralliesSubject.next([...t,o])}),s(r=>(console.error("Error al crear rally:",r),i(()=>new Error(r.message||"Error desconocido")))))}updateRally(e,r){let o=m(d({},r),{action:"update",id:e});return this.http.post(this.apiUrl,o).pipe(a(t=>{let n=this.ralliesSubject.value||[],h=n.findIndex(U=>U.id===e);h!==-1&&(n[h]=t,this.ralliesSubject.next([...n]))}),s(t=>(console.error("Error al actualizar rally:",t),i(()=>new Error(t)))))}getRallyById(e){return this.http.get(`${this.apiUrl}?id=${e}`).pipe(s(r=>(console.error("Error al obtener rally por ID:",r),i(()=>new Error(r)))))}deleteRally(e){let r={action:"delete",id:e};return this.http.post(this.apiUrl,r).pipe(a(()=>{let o=this.ralliesSubject.value||[];this.ralliesSubject.next(o.filter(t=>t.id!==e))}),s(o=>(console.error("Error al eliminar rally:",o),i(()=>new Error(o)))))}loadUserInscriptions(e){this.http.get(`${this.apiInscripcionesUrl}?userId=${e}`).pipe(a(r=>console.log("Respuesta inscripciones:",r)),l(r=>Array.isArray(r.inscritos)?r.inscritos.map(o=>o.id):[]),s(r=>(console.error("Error al cargar inscripciones:",r),p([])))).subscribe({next:r=>this.userInscriptionsSubject.next(r),error:()=>this.userInscriptionsSubject.next([])})}getFotosAprobadasPorUsuario(e){return this.http.get(`${this.apiUrl}/fotos.php?action=getApprovedPhotosByUser&userId=${e}`).pipe(l(r=>r.ralliesConFotoAprobada))}toggleInscripcion(e,r,o){let t={rallyId:e,userId:r,action:o?"desinscribir":"inscribir"};return this.http.post(this.apiInscripcionesUrl,t,{headers:{"Content-Type":"application/json"}}).pipe(a(n=>{n.success&&this.loadUserInscriptions(r)}),l(n=>n),s(n=>(console.error("Error HTTP o conexi\xF3n:",n),i(()=>({success:!1,message:n.message||"Error de conexi\xF3n o servidor"})))))}cancelarInscripcion(e){let r=parseInt(localStorage.getItem("userId")||"0",10);return r?this.cancelarInscripcionBackend(e,r):(console.error("Usuario no autenticado."),p(null))}cancelarInscripcionBackend(e,r){let o={rallyId:e,userId:r,action:"desinscribir"};return this.http.post(this.apiInscripcionesUrl,o,{headers:{"Content-Type":"application/json"}}).pipe(s(t=>(console.error("Error al cancelar inscripci\xF3n:",t),i(()=>new Error(t)))))}uploadPhotos(e,r){let o=new FormData;r.forEach(t=>o.append("photos[]",t,t.name));for(let t of r)if(!t.type.startsWith("image/"))throw console.error("Solo se pueden subir im\xE1genes."),new Error("Solo se pueden subir im\xE1genes.");return this.http.post(`${this.apiUploadPhotosUrl}?rallyId=${e}`,o).pipe(s(t=>(console.error("Error al subir fotos:",t),i(()=>new Error(t)))))}getFotosSubidas(e,r){let o=`${this.apiInscripcionesUrl}?rallyId=${e}&userId=${r}`;return this.http.get(o).pipe(l(t=>t.count||0),s(t=>(console.error("Error al obtener fotos subidas:",t),p(0))))}getFotosAprobadas(e,r){let o=`${this.apiUploadPhotosUrl}?action=checkAprobadas&rallyId=${e}&userId=${r}`;return this.http.get(o).pipe(l(t=>!!t.aprobadas),s(t=>(console.error("Error al comprobar fotos aprobadas:",t),p(!1))))}static \u0275fac=function(r){return new(r||u)(v(I))};static \u0275prov=y({token:u,factory:u.\u0275fac,providedIn:"root"})};export{f as a};
