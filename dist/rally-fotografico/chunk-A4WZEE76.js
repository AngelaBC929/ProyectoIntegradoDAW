import{Ua as b,db as u,j as p,k as h,l as s,n as o,r as d,u as l}from"./chunk-BWXDRC3P.js";var m=class i{constructor(t){this.http=t}apiUrl=`${u.apiUrl}/fotos.php`;handleError(t){return h(()=>new Error(t.error?.error||t.message))}uploadPhoto(t,r,e,n){let a=new FormData;return a.append("photo",t instanceof File?t:""),a.append("userId",r.toString()),a.append("rallyId",e.toString()),a.append("title",n),a.append("action","upload"),this.http.post(this.apiUrl,a).pipe(o(this.handleError))}getFotosPorUsuario(t){let r={action:"getByUser",userId:t.toString()};return this.http.get(this.apiUrl,{params:r}).pipe(o(this.handleError))}getFotosPorRallyYUsuario(t,r){let e={rallyId:t.toString(),userId:r.toString(),action:"getByRallyAndUser"};return this.http.get(this.apiUrl,{params:e}).pipe(o(this.handleError.bind(this)))}getFotosUsuarioActuales(t){let r={userId:t.toString(),action:"getUserPhotosActuales"};return this.http.get(this.apiUrl,{params:r}).pipe(o(this.handleError.bind(this)))}deletePhoto(t,r){let e=new FormData;return e.append("photo_id",t.toString()),e.append("userId",r.toString()),e.append("action","delete"),this.http.post(this.apiUrl,e).pipe(o(this.handleError.bind(this)))}editPhoto(t,r,e,n){let a=new FormData;return a.append("action","edit"),a.append("userId",t.toString()),a.append("photo_id",r.toString()),a.append("title",e),n&&a.append("photo",n),this.http.post(this.apiUrl,a)}vote(t,r){let e={action:"vote",photo_id:t,userId:r};return this.http.post(this.apiUrl,e).pipe(o(this.handleError.bind(this)))}getAllPhotos(){let t={action:"getAllPhotos"};return this.http.get(this.apiUrl,{params:t}).pipe(o(this.handleError.bind(this)))}updatePhotoStatus(t,r){let e=new FormData;return e.append("photo_id",t.toString()),e.append("status",r),e.append("action","updateStatus"),this.http.post(this.apiUrl,e).pipe(o(this.handleError.bind(this)))}getFotosAprobadasPaginated(t,r){let e={action:"getApprovedPhotos",limit:r.toString(),offset:((t-1)*r).toString()};return this.http.get(this.apiUrl,{params:e}).pipe(o(this.handleError.bind(this)))}getFotosAprobadas(t,r){let e=`${this.apiUrl}?action=getApprovedPhotos&rallyId=${t}&userId=${r}`;return this.http.get(e).pipe(s(n=>n.aprobadas),o(n=>(console.error("Error al comprobar fotos aprobadas:",n),p(!1))))}getFotosAprobadasPorUsuario(t){let r={action:"getApprovedPhotosByUser",userId:t.toString()};return this.http.get(this.apiUrl,{params:r}).pipe(s(e=>e.ralliesConFotoAprobada),o(this.handleError.bind(this)))}static \u0275fac=function(r){return new(r||i)(l(b))};static \u0275prov=d({token:i,factory:i.\u0275fac,providedIn:"root"})};export{m as a};
